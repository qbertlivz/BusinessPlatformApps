//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedditCoreTest.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RedditCoreTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;response&quot;:{&quot;RequestsUsed&quot;:4581,&quot;RequestsLimit&quot;:&quot;100000&quot;,&quot;ConcurrentRequests&quot;:&quot;1&quot;,&quot;RequestsInQueue&quot;:&quot;0&quot;,&quot;ActiveConcurrentRequestsAllowed&quot;:&quot;10&quot;,&quot;MaxConcurrentRequests&quot;:&quot;20&quot;,&quot;Request&quot;:{&quot;action&quot;:&quot;Search&quot;,&quot;dn&quot;:&quot;reddit.com&quot;,&quot;filter_date_from&quot;:&quot;1497830400&quot;,&quot;filter_domain&quot;:&quot;reddit.com&quot;,&quot;group_mode&quot;:&quot;thread&quot;,&quot;key&quot;:&quot;75fa803ed43e6464e45a566ec296074b&quot;,&quot;match_mode&quot;:&quot;boolean&quot;,&quot;max_matches&quot;:&quot;5000&quot;,&quot;mblog&quot;:&quot;off&quot;,&quot;query&quot;:&quot;superman|batman|flash|\&quot;wonder+woman\&quot;|\&quot;green+lantern\&quot;|firestorm|marvel|\&quot;dc+comics\&quot;|\&quot;dc+comic\&quot;| [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchApiResponse_BigDataset {
            get {
                return ResourceManager.GetString("SearchApiResponse_BigDataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {  
        ///   &quot;response&quot;:{  
        ///      &quot;RequestsUsed&quot;:4579,
        ///      &quot;RequestsLimit&quot;:&quot;100000&quot;,
        ///      &quot;ConcurrentRequests&quot;:&quot;1&quot;,
        ///      &quot;RequestsInQueue&quot;:&quot;0&quot;,
        ///      &quot;ActiveConcurrentRequestsAllowed&quot;:&quot;10&quot;,
        ///      &quot;MaxConcurrentRequests&quot;:&quot;20&quot;,
        ///      &quot;Request&quot;:{  
        ///         &quot;action&quot;:&quot;Search&quot;,
        ///         &quot;dn&quot;:&quot;reddit.com&quot;,
        ///         &quot;filter_date_from&quot;:&quot;1497830400&quot;,
        ///         &quot;filter_domain&quot;:&quot;reddit.com&quot;,
        ///         &quot;group_mode&quot;:&quot;thread&quot;,
        ///         &quot;key&quot;:&quot;75fa803ed43e6464e45a566ec296074b&quot;,
        ///         &quot;match_mode&quot;:&quot;boolean&quot;,
        ///         &quot;max_m [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ThreadApiResponse_BigDataset {
            get {
                return ResourceManager.GetString("ThreadApiResponse_BigDataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;response&quot;: {
        ///        &quot;RequestsUsed&quot;: 2,
        ///        &quot;RequestsLimit&quot;: &quot;100000&quot;,
        ///        &quot;ConcurrentRequests&quot;: &quot;1&quot;,
        ///        &quot;RequestsInQueue&quot;: &quot;0&quot;,
        ///        &quot;ActiveConcurrentRequestsAllowed&quot;: &quot;10&quot;,
        ///        &quot;MaxConcurrentRequests&quot;: &quot;20&quot;,
        ///        &quot;Request&quot;: {
        ///            &quot;offset&quot;: &quot;0&quot;,
        ///            &quot;limit&quot;: &quot;5&quot;,
        ///            &quot;sort_mode&quot;: &quot;&quot;,
        ///            &quot;match_mode&quot;: &quot;&quot;,
        ///            &quot;filter_date_from&quot;: &quot;0&quot;,
        ///            &quot;source&quot;: &quot;Boards&quot;,
        ///            &quot;action&quot;: &quot;Thread&quot;,
        ///            &quot;mode&quot;: &quot;full&quot;,
        ///            &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ThreadApiResponse_NoErrors_5Results {
            get {
                return ResourceManager.GetString("ThreadApiResponse_NoErrors_5Results", resourceCulture);
            }
        }
    }
}
