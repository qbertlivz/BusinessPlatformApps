SET ANSI_NULLS              ON;
SET ANSI_PADDING            ON;
SET ANSI_WARNINGS           ON;
SET ANSI_NULL_DFLT_ON       ON;
SET CONCAT_NULL_YIELDS_NULL ON;
SET QUOTED_IDENTIFIER       ON;
go

-- Must be executed inside the target database

-- Regular views
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='CommentsPostsView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.CommentsPostsView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='HashTagView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.HashTagView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='KeyPhraseView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.KeyPhraseView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='PostsView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.PostsView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='ReactionsView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.ReactionsView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='SentimentView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.SentimentView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='UsersView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.UsersView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='PagesView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.[PagesView];
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='EdgesView' AND TABLE_TYPE='VIEW')
    DROP VIEW fb.[EdgesView];


-- Tables
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='Users' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.Users;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='Comments' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.Comments;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='configuration' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.[configuration];
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='date' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.[date];
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='HashTags' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.HashTags;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='KeyPhrase' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.KeyPhrase;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='Posts' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.Posts;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='Reactions' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.Reactions;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='Sentiment' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.Sentiment;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingComments' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingComments;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingError' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingError;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingHashTags' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingHashTags;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingKeyPhrase' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingKeyPhrase;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingPosts' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingPosts;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingReactions' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingReactions;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='StagingSentiment' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.StagingSentiment;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='fb' AND TABLE_NAME='Edges' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE fb.[Edges];


IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='fb' AND ROUTINE_NAME='Merge' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE fb.[Merge];
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='fb' AND ROUTINE_NAME='UpdateEdges' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE fb.[UpdateEdges];


IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name='fb')
BEGIN
    EXEC ('CREATE SCHEMA fb AUTHORIZATION dbo'); -- Avoid batch error
END;


